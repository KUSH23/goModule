package main

import (
	"fmt"
	"math"
)

// func fprint(x int) (int, int) {
// 	x += 1
// 	y := x + 2
// 	return x, y
// }

// func foo(sli []int) {
// 	sli[0] += 1
// }

func incfn(x int) int {
	return x + 1
}

func MakeDistOrigin(o_x, o_y float64) func(float64, float64) float64 {
	fn := func(x, y float64) float64 {
		return math.Sqrt(math.Pow(x-o_x, 2) + math.Pow(y-o_y, 2))
	}
	return fn
}

func main() {

	// fnVar := incfn
	// y, z := fprint(x)
	// foo(x)
	defer fmt.Println("Bye!")
	dist := MakeDistOrigin(0, 0)
	fmt.Println(dist(1, 1))
}
